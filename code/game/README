- High Level -

-- Game philosophy --

The game would be a cross between Sim Ant (automated
growth), Populus (disasters), and Civilization. It would be a
turn-based strategy in which a malevolent higher power (Baal?) is
trying to inhibit and eventually exterminate a developing
civilization. The human player would play as Baal and the AI would
play the civilization. The twist to the game, what would make it
unique, would be the focus on keeping things somewhat scientifically
accurate. As a simple example, you would not be able to cast
hurricanes during winter or create volcanic eruptions in geologically
inactive locations.

-- Game mechanics --

A map consisting of discrete tiles/hexes would be generated. Each tile
would have a number of key properties:
* Food
* Production
* Damage â€“ Damaged tiles would have reduced yield but recover over time

Tiles would be "vulnerable" to various disasters based on a wide range of
tile attributes (climate, current weather, proximity to fault lines
etc).

-- Cities --

As a city grows, it works the nearby tiles. Food contributes to
population growth and production contributes to city hit-points, tile
infrastructure (enhances yield, but is susceptible to being damaged or
destroyed), or settlers (can found new cities). The goal here would be
to keep things simple so that the AI would not have to be too complex.

Cities would have different vulnerabilities based on their size and
location. Tropical cities would be more vulnerable to disease (and
hurricanes if they were near the coast). Larger cities would be more
vulnerable to earthquakes and fires. Cold-climate cities would be more
vulnerable to blizzards.

-- Civilization --

The civilization's total population contributes to tech growth, with
tech growth acting as a multiplier on production and probably having
other impacts as well (maybe making the civ more resistant to smaller
disasters or increasing population growth).

-- Gameplay --

In between turns, the civilization will grow and develop. During
Baal's turn, he will be presented with a current layout of the
land. The seasons will cycle between winter, spring, fall, and summer.
The state of all geological, biological, and climatological properties would be
somewhat randomized. Based on the current state, the player may see
opportunities to hit the civilization with various
disasters. Disasters cost mana; total mana and mana regeneration will
depend on your "level". Levels are gained by killing people, just like
an RPG. There may even be room for some kind of talent tree here where
you could focus on different categories of disasters.

The AI will initially be much more "powerful" than Ba'al in that it will
grow fast and there won't be much that Ba'al can do about it. However,
Ba'als power will grow and it is expected that his ability to kill will
start to surpass the civ's ability to grow.

-- Multiplayer --

An open question is whether the game should be symmetric or simply
Baal vs humans. A symmetric game, where both player control a
civilization and can cast disasters on each others civilizations,
would easy to adapt to multiplayer. This would also open up the
possibility of being able to cast beneficial spells on your own civ,
perhaps making the game feel less sadistic.

-- Game goals --

Present the player with interesting choices, simple game mechanics,
but deep strategy. Give the player the satisfaction and thrill of
unleashing successful combinations of disasters. The game should have
a strong problem-solving element; IE decisions on what disasters to
cast should be non-trivial. The game should reward the player for making
good long-term decisions, such as keeping a tile hot and dry before
hitting it with fire.

- Details -

-- World --

A collection of tiles.

--- Tile ---

Every tile has an atmosphere, climate, geology, and yield.

---- Atmosphere ----

Every tile has atmosphere above it. Atmosphere has dewpoint, temperature,
wind vector, and pressure.

---- Climate ----

Averate temp, average rainfall, and prevailing wind.

---- Land ----

Whatever civ has built here. Hitpoints.

----- Plains/Grassland/Hills/Desert -----

Soil moisture level (surface): reflects long-term rainfall

----- Mountains -----

Elevation
Snowpack

---- Ocean ----

Ocean temp (surface).
Depth.

---- Geology ----

Plate boundaries always fall between tiles. Boundaries can be:
Divergent
Convergent(ocean/land)
Convergent(ocean/ocean)
Convergent(land/land)
Transform

Every tile builds up plate tension and magma based on geology.

---- Yields ----

Similar to civ except give mountains very strong production and less
for hills.

--- Weather ---

---- Long term ----

Every turn, the weather since the last turn will be randomly simulated.
There will be random abnormal areas, with the epicenter of the abnormality
having the most extreme deviations from the normal climate and peripheral
tiles having smaller deviations from normal.

Abnormalilty types are: drought, moist, cold, hot.

---- Short term ----

Each turn has a "current" weather setup. This setup is also defined by
areas of abnormality.

Abnormality types are: high pressure, low pressure; more?

Wind direction is defined by looking at both the prevailing wind and
the current pressure situation.

--- Time ---

Time advances by seasons.

-- AI --

--- City Growth ---

Cities have a base growth rate that can be accelerated by gathering
surplus food. Cities with a food deficit will stop growing and may
become more succeptible to certain disasters.

--- City Build Possibilities ---

---- Infrastructure ----

---- Settling New Cities ----

--- Citizens ---

Citizens can either work tiles or stay in the city (contributes extra
to production and science). Citizens can only work tiles within a certain
range of the city.

-- Spells --

--- Avalanches ---

Affected by snowpack/elevation. Can be caused by earthquakes or blizzards.

--- Blizzards ---

Affected by nearby atmosphere. Enhanced by cold temps, low pressure, and
high dewpoints.

--- Disease ---

Enhanced by extreme temperatures, enhanced by food shortages, enhanced by
loss of infrastucture.

--- Hurricanes ---

Affected by nearby atmosphere; enhanced by warm oceans, high dewpoints,
and high pressure.

--- Earthquakes ---

Affected by nearby geology. Tranform boundaries make for the best
earthquakes; divergent and land/land convergent are not good for quakes.

Enhanced by plate tension.

Can cause tsunamis if performed on ocean tile.

--- Famines ---

Baal cannot cause these directly, but can cause them indirectly by focussing
attacks on nearby farms.

Maybe disasters that hit cities have a chance of destroying food-stores?

--- Floods ---

Affected by nearby atmosphere; enhanced by high dewpoints and high levels
of soil moisture.

--- Drought ---

Affected by nearby atmosphere; enhanced by low dewpoints, high temps, and
low levels of soil moisture.

--- Heat/cold waves ---

Affected by nearby atmosphere; heat waves enhanced by high temps, opposite for
cold waves.

--- Thunderstorm ---

Affected by nearby atmosphere; enhanced by high dewpoints, low pressure.

Can cause flood, tornado.

--- Tornadoes ---

Affected by nearby atmosphere; enhanced by high dewpoints, low pressure.

--- Tsunami ---

Baal cannot cast these directly. Can only be caused by other disasters
happening on ocean tiles.

--- Volcanoes ---

Affected by nearby geology. Enhanced by high magma build-up.

--- Wildfires ---

Enhanced by high wind, low dewpoint, high temperature, and low soil moisture.

- TODO List -

* Convert C++ code base to C++11:
  * Get things building
    * Port python code back to C++
    * Use nullptr
    * Use new for-loops
    * Use boost
    * Use smart pointers
    * Use strongly-typed enums
    * Aggressively refactor
    * Use auto and decltype
    * Use lambda functions
    * Use explicit defaulting/deleting of autogenerated methods
    * Change spell ids to something lighter-weight than a string
    * Replace inheritence with template where possible
    * Decorate headers and improve documentation
* Use a primitive system similar to that of samba's (percent, spell, etc)
* Need much more unit-testing
* Should spells like Flood/Tstorm/Snow, which imply increased precip,
  change the precip field for the atmosphere? If so, they will be
  double-counted when moisture is computed at end of turn since they also
  have an immediate impact on soil moisture.
* Should elevation impact base production?
* Continue to fill in more Spell implementations
* Map editor, map-file format defined, map-file loader
* Need spell animations
* Need to have a way of supporting bigger worlds (world scrolling)
* Plugging in to an open source weather model would be excellent
* Implement dewpoint
* Pressure needs to affect winds
* Model cloudcover/instability?
* Make food req dependent on rank, not pop?
* Need tracing infrastructure (esp for AI)
* Implement disasters as mini games?
* See code TODOs